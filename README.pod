=pod

=encoding UTF-8

=head1 NAME

Form::Data::Processor - Yet another form data validator

=head1 SYNOPSIS

    package MyForm::Field::Address;

    use Form::Data::Processor::Moose;
    extends 'Form::Data::Processor::Field::Compound';

    has_field zip     => ( type => 'Text', required => 1 );
    has_field addr1   => ( type => 'Text', required => 1 );
    has_field addr2   => ( type => 'Text' );
    has_field state   => ( type => 'Text', required => 1 );
    has_field country => ( type => 'Text', required => 1 );

    ...

    package MyForm;

    use Form::Data::Processor::Moose;
    extends 'Form::Data::Processor::Form';

    has_field 'addresses'         => ( type => 'Repeatable' );
    has_field 'addresses.address' => ( type => '+MyForm::Field::Address' );
    has_field 'addresses.type' => (
        type           => 'List',
        required       => 1,
        options        => [ 'BILLING', 'SHIPPING' ],
        multiple       => 0,
    );


    ...

    # later in your controller
    my $form = MyForm->new;
    die 'Not valid' $unless form->process( $ctx->params );

=head1 DESCRIPTION

Yet another form data validator, which is inspired by L<HTML::FormHandler>.

It has similar syntax and similar features, but it is B<NOT> a form generator.
Anyway you can extend it as you wish.

=head1 Form::Data::Processor vs HTML::FormHandler

I don't like Repeatable field in HFH - it is too slow (as the whole HFH is).
But I like its syntax. So FDP should be a little bit faster than HFH.

Please look at benchmarks (C<benchmarks> folder).

=head1 START HERE

=over 1

=item L<Form::Data::Processor::Form>

=item L<Form::Data::Processor::Field>

=back

=head1 SEE ALSO

L<HTML::FormHandler> - HTML form validator and generator.

=head1 AUTHOR

Dmitry "dim0xff" Latin <dim0xff@gmail.com>

=head1 COPYRIGHT AND LICENSE

This software is copyright (c) 2015 by Dmitry Latin.

This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.

=cut
